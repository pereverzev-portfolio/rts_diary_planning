Есть множество задач

у каждой задачи есть важность и приоритет
Важность — пользовательский параметр ("входной")
Приоритет — целевой рассчитываемый параметр ("выходной")

# Идея: менять приоритет в зависимости от срочности задачи и количества выполненных задач в ходе жизни задачи (как это делается в системах реального времени)

У каждой задачи есть время возникновения (НЕ время создания задачи в программе), время на выполнение (сложность)
У задачи может быть время просрочки (дедлайн, срок на выполнение)
Жизнь задачи — время с времени возникновения до полного выполнения задачи

# В начале жизни задачи приоритет равен важности

# К времени, которое равно времени просрочки минус время на выполнение задачи, если количество просроченных задач меньше размера подвыборки, горящая задача имеет достаточный приоритет, чтобы быть в подвыборке (оказаться в подвыборке хотя бы раз вблизи к обозаченному времени, до его наступления)

# Если количество просроченных задач больше чем мощность подвыборки, в подвыборку всё равно должны иметь возможность включаться задачи без дедлайна или, возможно, непросроченные задачи

может удаляться задача
может полностью выполняться задача
может меняться важность задачи
может менятья срок на выполнение задачи
может меняться время на выполнение задачи (сложность)
может редактироваться время возникновения задачи
выполненная задача может дополняться. В таком случае увеличивается трудоёмкость в часах, удаляются факты о выполнении

удаление задач и полное выполнение задач приводит к пересчёту относительной важности (автоматически) на оставшихся задачах

# Приоритет задачи не должен зависеть от перестановки фактов частичных выполнений других задач и самой задачи во время жизни задачи

_____________________

ПРИОРИТЕТ = ВАЖНОСТЬ + f(КОЛ.ВЫПОЛН.ЗА_ЖИЗНЬ) - Σ f(ФАКТ_ВЫПОЛНЕНИЯ_ЧАСТИ) + f(ДЕДЛАЙН, ВРЕМЯ_ВОЗНИКНОВЕНИЯ, ТРУДОЁМКОСТЬ, НАСТОЯЩЕЕ ВРЕМЯ)

ИЛИ

ПРИОРИТЕТ = ВАЖНОСТЬ + f(КОЛ.ВЫПОЛН.ЗА_ЖИЗНЬ) - Σ f(ФАКТ_ВЫПОЛНЕНИЯ_ЧАСТИ) + f(ДЕДЛАЙН, ВРЕМЯ_ВОЗНИКНОВЕНИЯ, ТРУДОЁМКОСТЬ, КОЛ.ВЫПОЛН.ЗА_ЖИЗНЬ)

где ВАЖНОСТЬ для самой неважной задачи в ранжировании равна 1, разница между первой и второй самыми неважными задачами ставится 1 (ЕСЛИ ВАЖНОСТЬ НЕ ИСПОЛЬЗУЕТСЯ В ПОДФОРМУЛАХ !!!) (только для первого слагаемого)

КОЛ.ВЫПОЛН.ЗА_ЖИЗНЬ может быть функцией, отражающей также степень выполнения задач, количество времени их выполнения